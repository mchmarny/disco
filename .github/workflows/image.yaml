name: image

on:
  workflow_call:
    outputs:
      digest:
        description: "Digest of the published image"
        value: ${{ jobs.image.outputs.digest }}
jobs:
  image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      digest: ${{ steps.image.outputs.digest }}
    steps:
    - name: Setup Go
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568  # v3.5.0
      with:
        go-version: ^1.19.4
    - run: go version
    - name: Cache Go Modules
      uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d  # v3.2.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout Code
      uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3.2.0
    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor
    - name: Capture Variables
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@v1
      with:
        token_format: "access_token"
        workload_identity_provider: projects/799736955886/locations/global/workloadIdentityPools/disco-github-pool/providers/github-provider
        service_account: disco-github-actions-user@cloudy-demos.iam.gserviceaccount.com
    - name: Define Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          us-west1-docker.pkg.dev/cloudy-demos/disco/disco
        tags: |
          type=raw,enable=true,value=${{ env.RELEASE_VERSION }}
          type=raw,enable=true,value=${{ env.GITHUB_SHA }}
    - name: Registry Auth
      uses: docker/login-action@v2
      with:
        registry: us-west1-docker.pkg.dev/cloudy-demos/disco
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    - name: Image Push
      id: push
      uses: docker/build-push-action@v3
      with:
        file: deployment/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Export Digest
      id: image
      run: |
        echo "digest=${{ inputs.image }}@${{ steps.push.outputs.digest }}" >> $GITHUB_OUTPUT
