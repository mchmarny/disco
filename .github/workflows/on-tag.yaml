name: tag
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'  # Only build tag with semantic versioning format
env:
  REG_URI: us-west1-docker.pkg.dev
  IMAGE_REG: cloudy-demos/disco
  IMAGE_NAME: disco
  SA_EMAIL: disco-github-actions-user@cloudy-demos.iam.gserviceaccount.com
  PROVIDER_ID: projects/799736955886/locations/global/workloadIdentityPools/disco-github-pool/providers/github-provider
  COSIGN_VERSION: v1.13.1
  KMS_KEY: projects/cloudy-demos/locations/global/keyRings/disco-signer-ring/cryptoKeys/disco-signer/cryptoKeyVersions/1
jobs:
  test:
    uses: ./.github/workflows/test.yaml
  release-cli:
    runs-on: ubuntu-latest
    needs:
    - test
    permissions:
      contents: write
    steps:
    - name: Setup Go
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568  # v3.5.0
      with:
        go-version: ^1.19.4
    - run: go version
    - name: Cache Go Modules
      uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d  # v3.2.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout Code
      uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3.2.0
      with:
        fetch-depth: 2
    - name: Install Syft
      uses: anchore/sbom-action/download-syft@06e109483e6aa305a2b2395eabae554e51530e1d  # v0.13.1
      with:
        version: v0.13.1
    - name: Build CLI
      uses: goreleaser/goreleaser-action@8f67e590f2d095516493f017008adc464e63adb1  # v4.1.0
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
  release-server:
    runs-on: ubuntu-latest
    needs:
    - test
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Setup Go
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568  # v3.5.0
      with:
        go-version: ^1.19.4
    - run: go version
    - name: Cache Go Modules
      uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d  # v3.2.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout Code
      uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3.2.0
    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor
    - name: Capture Variables
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d  # v1.0.0
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ env.PROVIDER_ID }}
        service_account: ${{ env.SA_EMAIL }}
    - name: Define Metadata
      id: meta
      uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea  # v4.1.1
      with:
        images: |
          ${{ env.REG_URI }}/${{ env.IMAGE_REG }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,enable=true,value=${{ env.RELEASE_VERSION }}
          type=raw,enable=true,value=${{ env.GITHUB_SHA }}
    - name: Registry Auth
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
      with:
        registry: ${{ env.REG_URI }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    - name: Image Push
      id: push
      uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5  # v3.2.0
      with:
        file: cmd/server/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Export Digest
      run: |
        echo "${{ env.REG_URI }}/${{ env.IMAGE_REG }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}" > digest.txt
    - name: Install Cosign
      uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b  # v2.8.1
      with:
        cosign-release: ${{ env.COSIGN_VERSION }}
    - name: Auth Cosign
      run: |
        cosign version
        cosign login ${{ env.REG_URI }} --username=oauth2accesstoken --password=${{ steps.auth.outputs.access_token }}
    - name: Get KMS Key
      run: |
        cosign generate-key-pair --kms ${{ env.KMS_KEY }}
    - name: Sign Image
      run: |
        cosign sign --force --key ${{ env.KMS_KEY }} $(cat digest.txt)
      env:
        COSIGN_PASSWORD: ${{ steps.auth.outputs.access_token }}
    - name: Gen SBOM
      uses: anchore/sbom-action@06e109483e6aa305a2b2395eabae554e51530e1d  # v0.13.1
      with:
        image: $(cat digest.txt)
        registry-username: oauth2accesstoken
        registry-password: ${{ steps.auth.outputs.access_token }}
        artifact-name: sbom.spdx.json
        output-file: ./sbom.spdx.json
        format: spdx-json
    - name: Print SBOM
      run: cat sbom.spdx.json
    - name: Attest SBOM
      run: |
        cosign attest --predicate sbom.spdx.json --type spdxjson --key ${{ env.KMS_KEY }} $(cat digest.txt)
      env:
        COSIGN_PASSWORD: ${{ steps.auth.outputs.access_token }}
